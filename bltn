#!/bin/bash

CONFIG_FILE="${HOME}/.config/bltn/bltn.conf"

if [ ! -f "$CONFIG_FILE" ] ; then
	mkdir -p "$(dirname "$CONFIG_FILE")"

	{
		echo 'SYNC_DIR="${HOME}/BLTN/"'
		echo 'LOCAL_DIR="${HOME}/.bltn/"'
		echo 'BROWSER_COMMAND=firefox'
		echo '#BROWSER_COMMAND=chromium-browser' 
	} >> "$CONFIG_FILE"

	echo Config file "$CONFIG_FILE" created.
	echo You can now edit it to change variables.
	echo See README.md for more informations about variables.
	exit 0
fi

. "$CONFIG_FILE"

create_dir () {
	if [ ! -d "$1" ] ; then
		mkdir -p "$1"
	fi
}

create_dir "$SYNC_DIR"
create_dir "$LOCAL_DIR"


get_title () {
	GROSS_TITLE="$(wget --quiet -O - "$1" | sed -n -e 'H;${x;s!.*<head[^>]*>\(.*\)</head>.*!\1!;tnext};b;:next;s!.*<title>\(.*\)</title>.*!\1!p')"
	echo '<HTML><BODY>'"$GROSS_TITLE"'</BODY></HTML>' > /tmp/title.html
	w3m -dump -cols 9999 /tmp/title.html
	rm /tmp/title.html
}


# add url
add () {
	cd "$SYNC_DIR"
	FILENAME=$(echo "$1" | sed "s/\/\//%/g" | cut -d% -f2 \
	                     | sed "s/\//__/g" \
	                     | sed "s/\?/QM/g" )
	if [ ! -f "$FILENAME" ] ; then
		echo "$1" > "$FILENAME"
	fi
}


show_local_item () {
	echo "$1" \| "$(cat "$2"/title.txt)"
	echo \> "$(cat "$2"/url.txt)"
	echo ==============================================
}


show_sync_item () {
	TITLEFILE="${LOCAL_DIR}/${2}/title.txt"
	if [ -f "$TITLEFILE" ] ; then
		echo "$1" \| "$(cat "$TITLEFILE")"
		echo \> "$(cat "$2")"
	else
		echo "$1" \| "$(cat "$2")"
	fi
	echo ==============================================
}


open_if () {
	FILE="$(grep -o "[^/]*$" url.txt)"

	if [ -f "$FILE" ]
	then
		$BROWSER_COMMAND "$(echo "$FILE" | sed "s/\?/%3F/g")"
	elif [ -f "${FILE}.html" ]
	then
		$BROWSER_COMMAND "$(echo "$FILE" | sed "s/\?/%3F/g").html"
	elif [ -f index.html ]
	then
		$BROWSER_COMMAND index.html
	else
		$BROWSER_COMMAND "$(ls index*.html | sed "s/\?/%3F/g")"
	fi
}


open () {
	cd "$LOCAL_DIR"
	TMP="/tmp/bltn.txt"
	ls -tr > "$TMP"
	echo ==============================================
	
	K=1
	while read DIR
	do
		show_local_item "$K" "$DIR"
		K=$(( K+1 ))
	done < "$TMP"

	echo Enter the number of the item you want to open:
	read NUMBER

	ITEM=$(sed -n "$NUMBER"p "$TMP")
	cd "$ITEM"
	open_if
	cd ..

	echo "Do you want to remove this / those item(s) ?"
	read ANSWER
	case "$ANSWER" in
		y*|o*|Y*|O*)
			rm "${SYNC_DIR}/${ITEM}"
			clean
			;;
	esac
	
	rm "$TMP"
}


process_case () {
	case "$1" in
		"--remove-syncdir")
			echo "Enter the number(s) of the item(s) you want to remove (ex: 1 2 4):"
			;;
		"--remove-localdir")
			echo "Enter the number(s) of the item(s) you want to re-download (ex: 1 2 4):"
			;;
		"--open-url")
			echo Enter the number of the item you want to open:
			;;
		"--list")
			exit 0
			;;
	esac
}

process_sync () {
	cd "$SYNC_DIR"
	TMP="/tmp/bltn.txt"
	ls -tr > "$TMP"
	echo ==============================================
	
	K=1
	while read ITEM
	do
		show_sync_item "$K" "$ITEM"
		K=$(( K+1 ))
	done < "$TMP"
	
	process_case "$1"
	read NUMBER

	ITEM=$(sed -n "$NUMBER"p "$TMP")
	case "$1" in
		"--remove-syncdir")
			rm "$ITEM"
			;;
		"--remove-localdir")
			rm -r "${LOCAL_DIR}/${ITEM}"
			;;
		"--open-url")
			$BROWSER_COMMAND "$(cat "$ITEM")"
			;;
	esac
	
	rm "$TMP"
}


delete_element () {
	URL=$(cat "$2")
	if [ "$1" = "$URL" ]
	then
		rm "$2"
	fi
}


# delete URL
delete () {
	cd "$SYNC_DIR"
	for ITEM in $(ls -tr)
	do
		delete_element "$1" "$ITEM"
	done

	FILE="$(echo "$1" | sed "s/file:\/\///g")"
	DIR="$(dirname "$FILE")"
	if [ -d "$DIR" ]
	then
		URL="$(cat "${DIR}/url.txt")"
		delete "$URL"
	fi
}


remove_dir () {
	cd "$1"
	if [ ! "$(ls)" = "" ]
	then
		rm -r ./*
	fi
}


list_urls () {
	cd "$SYNCDIR"
	if [ ! "$(ls ./*/)" = "" ] ; then
		for ITEM in */* ; do
			cat "$ITEM"
		done
	else
		echo No saved item
	fi
}


download () {
	DOWNLOAD_COMMAND='wget -nd -E -H -K -k -p -q '
	cd "$SYNC_DIR"
	if [ ! "$(ls)" = "" ] ; then
		for FILE in * ; do
			cd "$LOCAL_DIR"
			if [ ! -d "$FILE" ] ; then
				mkdir "$FILE"
				cd "$FILE"
				LINK="$(cat "$SYNC_DIR"/"$FILE")"
				echo Download "$LINK"
				get_title "$LINK" > title.txt
				echo "$LINK" > url.txt
				$DOWNLOAD_COMMAND "$LINK"
			fi
		done
	fi
}


clean () {
	cd "$LOCAL_DIR"
	if [ ! "$(ls)" = "" ] ; then
		for DIR in * ; do
			J=0
			cd "$SYNC_DIR"
			if [ ! "$(ls)" = "" ] ; then
				for FILE in * ; do
					if [ "$DIR" = "$FILE" ] ; then
						J=1
					fi
				done
			fi
			if [ $J -eq 0 ] ; then
				echo Remove "$(cat "${LOCAL_DIR}/${DIR}/url.txt")"
				rm -r "${LOCAL_DIR}/${DIR}"
			fi
		done
	fi
}


update () {
	clean
	download
}


usage () {
	cat << EOF
Use: $(basename "$0") [option]
Options:   -h, --help                    Display help
           -a, --add url [url2â€¦]         Add url(s)
           -l, --list                    List saved items
           -lu, --list-urls              List only urls
           -u, --update                  Update local copy
           -f, --force                   Force re-download of an item
           -F, --force-all               Force re-download of all items
           -o, --open                    Open an downloaded item
           -O, --open-url                Open an item's url
           -r, --remove                  Remove an item
           -d, --delete url              Remove url
           -R, --remove-all              Remove all item
EOF
}

if [ $# -eq 0 ] ; then
	echo Error: missing argument
	usage
	exit 0
fi

if [ ! "$1" = "-a" ] && [ ! "$1" = "--add" ] && [ $# -ge 2 ] && \
   [ ! "$1" = "-d" ] && [ ! "$1" = "--delete" ] ; then
	echo Error: to many arguments
	usage
	exit 0
fi

case "$1" in
	"--help"|"-h")
		usage
		exit 0
		;;
	"--list"|"-l")
		process_sync --list
		;;
	"--list-urls"|"-lu")
		list_urls
		;;
	"--add"|"-a")
		if [ $# -eq 1 ] ; then
			echo Error: missing argument
			usage
			exit 0
		fi
		while test $# -ne 1 ; do
			shift
			add "$1"
		done
		download
		;;
	"--remove"|"-r")
		process_sync --remove-syncdir
		clean
		;;
	"--remove-all"|"-R")
		remove_dir "$SYNC_DIR"
		remove_dir "$LOCAL_DIR"
		clean
		;;
	"--delete"|"-d")
		delete "$2"
		clean
		;;
	"--force"|"-f")
		process_sync --remove-localdir
		download
		;;
	"--force-all"|"-F")
		remove_dir "$LOCAL_DIR"
		download
		;;
	"--open"|"-o")
		open
		;;
	"--open-url"|"-O")
		process_sync --open-url
		clean
		;;
	"--update"|"-u")
		update
		;;
	*)
		echo Error: "$1" invalid argument
		usage
		exit 0
		;;
esac

