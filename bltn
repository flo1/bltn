#!/bin/bash

CONFIGFILE="${HOME}/.config/bltn/bltn.conf"

if [ ! -f "$CONFIGFILE" ] ; then
	mkdir -p "$(dirname "$CONFIGFILE")"
	echo 'SYNCDIR="${HOME}/BLTN/"'      >> "$CONFIGFILE"
	echo 'LOCALDIR="${HOME}/.bltn/"'    >> "$CONFIGFILE"
	echo 'BROWSERCOMMAND=firefox'           >> "$CONFIGFILE"
	echo '#BROWSERCOMMAND=chromium-browser' >> "$CONFIGFILE"
	echo 'VIDEOPLAYER=vlc'                  >> "$CONFIGFILE"
	echo Config file $CONFIGFILE created.
	echo You can now edit it to change variables.
	echo See README.md for more informations about variables.
	exit 0
fi

. "$CONFIGFILE"

SYNCARTICLESDIR="${SYNCDIR}/articles/"
LOCALARTICLESDIR="${LOCALDIR}/articles/"
SYNCVIDEOSDIR="${SYNCDIR}/videos/"
LOCALVIDEOSDIR="${LOCALDIR}/videos/"

create_dir () {
	if [ ! -d "$1" ] ; then
		mkdir -p "$1"
	fi
}

create_dir "$SYNCARTICLESDIR"
create_dir "$LOCALARTICLESDIR"
create_dir "$SYNCVIDEOSDIR"
create_dir "$LOCALVIDEOSDIR"

get_title () {
	GROSSTITLE="$(wget --quiet -O - "$1" | sed -n -e 'H;${x;s!.*<head[^>]*>\(.*\)</head>.*!\1!;tnext};b;:next;s!.*<title>\(.*\)</title>.*!\1!p')"
	echo '<HTML><BODY>'"$GROSSTITLE"'</BODY></HTML>' > /tmp/title.html
	w3m -dump /tmp/title.html
	rm /tmp/title.html
}

add () {
	case "$1" in
		"--article")
			DIRECTORY="$SYNCARTICLESDIR"
			;;
		"--video")
			DIRECTORY="$SYNCVIDEOSDIR"
			;;
	esac
	cd "$DIRECTORY"
	FILENAME=$(echo "$2" | sed "s/\/\//%/g" | cut -d% -f2 \
	                     | sed "s/\//__/g" \
	                     | sed "s/\?/QM/g" )
	echo "$2" > "$FILENAME"
}

show_local_item () {
	echo "$1" \| "$(cat "$2"/title.txt)"
	echo \> "$(cat "$2"/url.txt)"
	echo ==============================================
}

show_sync_item () {
	TITLEFILE="${LOCALDIRECTORY}/${2}/title.txt"
	if [ -f "$TITLEFILE" ] ; then
		echo "$1" \| "$(cat "$TITLEFILE")"
		echo \> "$(cat "$2")"
	else
		echo "$1" \| $(cat "$2")
	fi
	echo ==============================================
}

open_if () {
	if [ "$(grep " $1 " <<< " $2 " )" ] ; then
		cd "$3"
		case "$4" in
			"--article")
				FILE="$(cat "url.txt" | grep -o "[^/]*$")"
				if [ -f "$FILE" ] ; then
					$BROWSERCOMMAND "$(echo "$FILE" | sed "s/\?/%3F/g")"
				elif [ -f "${FILE}.html" ] ; then
					$BROWSERCOMMAND "$(echo "$FILE" | sed "s/\?/%3F/g").html"
				elif [ -f index.html ] ; then
					$BROWSERCOMMAND index.html
				else
					$BROWSERCOMMAND "$(ls index*.html | sed "s/\?/%3F/g")"
				fi
				;;
			"--video")
				$VIDEOPLAYER "$(ls *[^txt$])"
				;;
		esac
		cd ..
	fi
}

remove_element () {
	if [ "$(grep " $2 " <<< " $3 " )" ] ; then
		case "$1" in
			"--remove-syncdir")
				rm "$4"
				;;
			"--remove-localdir")
				rm -r "$LOCALDIRECTORY"/"$4"
				;;
			"--open-url")
				$BROWSERCOMMAND "$(cat "$4")"
				;;
		esac
	fi
}

open () {
	case "$1" in
		"--article")
			DIRECTORY="$LOCALARTICLESDIR"
			;;
		"--video")
			DIRECTORY="$LOCALVIDEOSDIR"
			;;
	esac

	cd "$DIRECTORY"
	if [ ! "$(ls)" = "" ] ; then
		echo ==============================================
		K=1
		for I in $(ls -tr) ; do
			show_local_item "$K" "$I"
			K=$(( $K+1 ))
		done

		echo Enter the number of the item you want to open:
		read NUMBER

		K=1
		for I in $(ls -tr) ; do
			open_if "$K" "$NUMBER" "$I" "$1"
			K=$(( $K+1 ))
		done
	else
		echo No saved item
	fi
}

open_article_video () {
	if [ ! "$(ls "$LOCALARTICLESDIR" && ls "$LOCALVIDEOSDIR")" = "" ] ; then
		echo ==============================================
		K=1
		cd "$LOCALARTICLESDIR"
		for I in $(ls -tr) ; do
			show_local_item "$K" "$I"
			K=$(( $K+1 ))
		done
		cd "$LOCALVIDEOSDIR"
		for I in $(ls -tr) ; do
			show_local_item "$K" "$I"
			K=$(( $K+1 ))
		done

		echo Enter the number of the item you want to open:
		read NUMBER

		K=1
		cd "$LOCALARTICLESDIR"
		for I in $(ls -tr) ; do
			open_if "$K" "$NUMBER" "$I" --article
			K=$(( $K+1 ))
		done
		cd "$LOCALVIDEOSDIR"
		for I in $(ls -tr) ; do
			open_if "$K" "$NUMBER" "$I" --video
			K=$(( $K+1 ))
		done
	else
		echo No saved item
	fi
}

process_case () {
	case "$1" in
		"--remove-syncdir")
			echo "Enter the number(s) of the item(s) you want to remove (ex: 1 2 4):"
			;;
		"--remove-localdir")
			echo "Enter the number(s) of the item(s) you want to re-download (ex: 1 2 4):"
			;;
		"--open-url")
			echo Enter the number of the item you want to open:
			;;
		"--list")
			exit 0
			;;
	esac
}

process_sync () {
	case "$1" in
		"--article")
			SYNCDIRECTORY="$SYNCARTICLESDIR"
			LOCALDIRECTORY="$LOCALARTICLESDIR"
			;;
		"--video")
			SYNCDIRECTORY="$SYNCVIDEOSDIR"
			LOCALDIRECTORY="$LOCALVIDEOSDIR"
			;;
	esac
	cd "$SYNCDIRECTORY"
	if [ ! "$(ls)" = "" ] ; then
		echo ==============================================
		K=1
		for ITEM in $(ls -tr) ; do
			show_sync_item "$K" "$ITEM"
			K=$(( $K+1 ))
		done

		process_case "$2"
		read NUMBER

		K=1
		for ITEM in $(ls -tr) ; do
			remove_element "$2" "$K" "$NUMBER" "$ITEM"
			K=$(( $K+1 ))
		done
	else
		echo No saved item
	fi
}

process_sync_av () {
	if [ ! "$(ls "$SYNCARTICLESDIR" && ls "$SYNCVIDEOSDIR")" = "" ] ; then
		K=1
		echo ==============================================

		SYNCDIRECTORY="$SYNCARTICLESDIR"
		LOCALDIRECTORY="$LOCALARTICLESDIR"
		cd "$SYNCDIRECTORY"
		for ITEM in $(ls -tr) ; do
			show_sync_item "$K" "$ITEM"
			K=$(( $K+1 ))
		done

		SYNCDIRECTORY="$SYNCVIDEOSDIR"
		LOCALDIRECTORY="$LOCALVIDEOSDIR"
		cd "$SYNCDIRECTORY"
		for ITEM in $(ls -tr) ; do
			show_sync_item "$K" "$ITEM"
			K=$(( $K+1 ))
		done

		process_case "$1"
		read NUMBER

		K=1

		SYNCDIRECTORY="$SYNCARTICLESDIR"
		LOCALDIRECTORY="$LOCALARTICLESDIR"
		cd "$SYNCDIRECTORY"
		for ITEM in $(ls -tr) ; do
			remove_element "$1" "$K" "$NUMBER" "$ITEM"
			K=$(( $K+1 ))
		done

		SYNCDIRECTORY="$SYNCVIDEOSDIR"
		LOCALDIRECTORY="$LOCALVIDEOSDIR"
		cd "$SYNCDIRECTORY"
		for ITEM in $(ls -tr) ; do
			remove_element "$1" "$K" "$NUMBER" "$ITEM"
			K=$(( $K+1 ))
		done
	else
		echo No saved item
	fi
}

delete_element () {
	URL=$(cat "$2")
	if [ "$1" = "$URL" ] ; then
		rm "$2"
	fi
}

delete () {
	cd "$SYNCARTICLESDIR"
	for ITEM in $(ls -tr) ; do
		delete_element "$1" "$ITEM"
	done

	cd "$SYNCVIDEOSDIR"
	for ITEM in $(ls -tr) ; do
		delete_element "$1" "$ITEM"
	done

	FILE="$(echo "$1" | sed "s/file:\/\///g")"
	DIR="$(dirname "$FILE")"
	if [ -d "$DIR" ] ; then
		URL="$(cat "${DIR}/url.txt")"
		delete "$URL"
	fi
}

remove_dir () {
	cd "$1"
	if [ ! "$(ls)" = "" ] ; then
		rm -r *
	fi
}

list_urls () {
	cd "$SYNCDIR"
	if [ ! "$(ls */)" = "" ] ; then
		for ITEM in */* ; do
			cat "$ITEM"
		done
	else
		echo No saved item
	fi
}

download () {
	case "$1" in
		"--articles")
			SYNCDIRECTORY="$SYNCARTICLESDIR"
			LOCALDIRECTORY="$LOCALARTICLESDIR"
			DOWNLOADCOMMAND='wget -nd -E -H -K -k -p -q '
			;;
		"--videos")
			SYNCDIRECTORY="$SYNCVIDEOSDIR"
			LOCALDIRECTORY="$LOCALVIDEOSDIR"
			DOWNLOADCOMMAND='youtube-dl --no-playlist'
			;;
	esac
	cd "$SYNCDIRECTORY"
	if [ ! "$(ls)" = "" ] ; then
		for FILE in * ; do
			cd "$LOCALDIRECTORY"
			if [ ! -d "$FILE" ] ; then
				mkdir "$FILE"
				cd "$FILE"
				LINK="$(cat "$SYNCDIRECTORY"/"$FILE")"
				echo Download "$LINK"
				$DOWNLOADCOMMAND "$LINK"
				echo "$(get_title "$LINK")" > title.txt
				echo "$LINK" > url.txt
			fi
		done
	fi
}

clean () {
	case "$1" in
		"--articles")
			SYNCDIRECTORY="$SYNCARTICLESDIR"
			LOCALDIRECTORY="$LOCALARTICLESDIR"
			;;
		"--videos")
			SYNCDIRECTORY="$SYNCVIDEOSDIR"
			LOCALDIRECTORY="$LOCALVIDEOSDIR"
			;;
	esac
	cd "$LOCALDIRECTORY"
	if [ ! "$(ls)" = "" ] ; then
		for DIR in * ; do
			J=0
			cd "$SYNCDIRECTORY"
			if [ ! "$(ls)" = "" ] ; then
				for FILE in * ; do
					if [ "$DIR" = "$FILE" ] ; then
						J=1
					fi
				done
			fi
			if [ $J -eq 0 ] ; then
				echo Remove "$(cat "${LOCALDIRECTORY}/${DIR}/url.txt")"
				rm -r "$LOCALDIRECTORY"/"$DIR"
			fi
		done
	fi
}

download_all () {
	download --articles
	download --videos
}

clean_all () {
	clean --articles
	clean --videos
}

update () {
	clean_all
	download_all
}

usage () {
	cat << EOF
Use: $(basename $0) [option]
Options:   -h, --help                    Display help
           -a, --add url [url2…]         Add url(s)
           -av, --add-video url [url2…]  Add video(s)
           -l, --list                    List saved items
           -la, --list-articles          List saved articles
           -lv, --list-videos            List saved videos
           -lu, --list-urls              List only urls
           -u, --update                  Update local copy
           -f, --force                   Force re-download of an item
           -fa, --force-article          Force re-download of an article
           -fv, --force-video            Force re-download of a video
           -F, --force-all               Force re-download of all items
           -Fa, --force-all-articles     Force re-download of all articles
           -Fv, --force-all-videos       Force re-download of all videos
           -o, --open                    Open an downloaded item
           -oa, --open-article           Open an downloaded article
           -ov, --open-video             Open an downloaded video
           -O, --open-url                Open an item's url
           -Oa, --open-url-article       Open an article's url
           -Ov, --open-url-video         Open an video's url
           -r, --remove                  Remove an item
           -ra, --remove-article         Remove an article
           -rv, --remove-video           Remove an video
           -d, --delete url              Remove url
           -R, --remove-all              Remove all item
           -Ra, --remove-all-articles    Remove all articles
           -Rv, --remove-all-videos      Remove all video
EOF
}

if [ $# -eq 0 ] ; then
	echo Error: missing argument
	usage
	exit 0
fi

if [ ! "$1" = "-a" ] && [ ! "$1" = "--add" ] && [ $# -ge 2 ] && \
   [ ! "$1" = "-av" ] && [ ! "$1" = "--add-video" ] && \
   [ ! "$1" = "-d" ] && [ ! "$1" = "--delete" ] ; then
	echo Error: to many arguments
	usage
	exit 0
fi

case "$1" in
	"--help"|"-h")
		usage
		exit 0
		;;
	"--list"|"-l")
		process_sync_av --list
		;;
	"--list-articles"|"-la")
		process_sync --article --list
		;;
	"--list-videos"|"-lv")
		process_sync --video --list
		;;
	"--list-urls"|"-lu")
		list_urls
		;;
	"--add"|"-a")
		if [ $# -eq 1 ] ; then
			echo Error: missing argument
			usage
			exit 0
		fi
		while test $# -ne 1 ; do
			shift
			add --article "$1"
		done
		download --articles
		;;
	"--add-video"|"-av")
		if [ $# -eq 1 ] ; then
			echo Error: missing argument
			usage
			exit 0
		fi
		while test $# -ne 1 ; do
			shift
			add --video "$1"
		done
		download --videos
		;;
	"--remove"|"-r")
		process_sync_av --remove-syncdir
		clean_all
		;;
	"--remove-article"|"-ra")
		process_sync --article --remove-syncdir
		clean_all
		;;
	"--remove-video"|"-rv")
		process_sync --video --remove-syncdir
		clean_all
		;;
	"--remove-all"|"-R")
		remove_dir "$SYNCARTICLESDIR"
		remove_dir "$SYNCVIDEOSDIR"
		clean_all
		;;
	"--remove-all-articles"|"-Ra")
		remove_dir "$SYNCARTICLESDIR"
		clean_all
		;;
	"--remove-all-videos"|"-Rv")
		remove_dir "$SYNCVIDEOSDIR"
		clean_all
		;;
	"--delete"|"-d")
		delete "$2"
		clean_all
		;;
	"--force"|"-f")
		process_sync_av --remove-localdir
		download_all
		;;
	"--force-article"|"-fa")
		process_sync --article --remove-localdir
		download --articles
		;;
	"--force-video"|"-fv")
		process_sync --video --remove-localdir
		download --videos
		;;
	"--force-all"|"-F")
		remove_dir "$LOCALARTICLESDIR"
		remove_dir "$LOCALVIDEOSDIR"
		download_all
		;;
	"--force-all-articles"|"-Fa")
		remove_dir "$LOCALARTICLESDIR"
		download --articles
		;;
	"--force-all-videos"|"-Fv")
		remove_dir "$LOCALVIDEOSDIR"
		download --articles
		;;
	"--open"|"-o")
		open_article_video
		;;
	"--open-article"|"-oa")
		open --article
		;;
	"--open-video"|"-ov")
		open --video
		;;
	"--open-url"|"-O")
		process_sync_av --open-url
		clean_all
		;;
	"--open-url-article"|"-Oa")
		process_sync --article --open-url
		clean_all
		;;
	"--open-url-video"|"-Ov")
		process_sync --video --open-url
		clean_all
		;;
	"--update"|"-u")
		update
		;;
	*)
		echo Error: $1 invalid argument
		usage
		exit 0
		;;
esac

