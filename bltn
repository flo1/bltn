#!/bin/bash

CONFIGFILE="/home/$USER/.config/bltn/bltn.conf"

if [ ! -f "$CONFIGFILE" ] ; then
	mkdir -p "$(dirname "$CONFIGFILE")"
	echo 'SYNCDIR="/home/$USER/Articles/"'      >> "$CONFIGFILE"
	echo 'LOCALDIR="/home/$USER/.ReadItLater/"' >> "$CONFIGFILE"
	echo 'BROWSERCOMMAND=firefox'               >> "$CONFIGFILE"
	echo '#BROWSERCOMMAND=chromium-browser'     >> "$CONFIGFILE"
	echo Config file $CONFIGFILE created.
	echo You can now edit it to change variables.
	echo See README.md for more informations about variables.
	exit 0
fi

. "$CONFIGFILE"

SYNCARTICLESDIR="${SYNCDIR}/articles/"
LOCALARTICLESDIR="${LOCALDIR}/articles/"
SYNCVIDEOSDIR="${SYNCDIR}/videos/"
LOCALVIDEOSDIR="${LOCALDIR}/videos/"

create_dir () {
	if [ ! -d "$1" ] ; then
		mkdir -p "$1"
	fi
}

create_dir "$SYNCARTICLESDIR"
create_dir "$LOCALARTICLESDIR"
create_dir "$SYNCVIDEOSDIR"
create_dir "$LOCALVIDEOSDIR"

get_title () {
	GROSSTITLE="$(wget --quiet -O - "$1" | sed -n -e 'H;${x;s!.*<head[^>]*>\(.*\)</head>.*!\1!;tnext};b;:next;s!.*<title>\(.*\)</title>.*!\1!p')"
	echo '<HTML><BODY>'"$GROSSTITLE"'</BODY></HTML>' > /tmp/title.html
	w3m -dump /tmp/title.html
	rm /tmp/title.html
}

add () {
	case "$1" in
		"--article")
			DIRECTORY="$SYNCARTICLESDIR"
			;;
		"--video")
			DIRECTORY="$SYNCVIDEOSDIR"
			;;
	esac
	cd "$DIRECTORY"
	FILENAME=$(echo "$2" | sed "s/\/\//%/g" | cut -d% -f2 | sed "s/\//__/g")
	echo "$2" > "$FILENAME"
}

open_element () {
	case "$1" in
		"--article")
			if [ ! "$(ls | grep html$)" = "" ] ; then
				$BROWSERCOMMAND *.html
			fi
			if [ ! "$(ls | grep htm$)" = "" ] ; then
				$BROWSERCOMMAND *.htm
			fi
			;;
		"--video")
			vlc *.mp4
			;;
	esac
}

show_local_item () {
	echo "$1" \| "$(cat "$2"/title.txt)"
	J="$(echo "$2" | sed "s/__/\//g")"
	echo \> "$J"
	echo ==============================================
}

open_if () {
	if [ "$1" -eq "$2" ] ; then
		cd "$3"
		open_element "$4"
		cd ..
	fi
}

open () {
	case "$1" in
		"--article")
			DIRECTORY="$LOCALARTICLESDIR"
			;;
		"--video")
			DIRECTORY="$LOCALVIDEOSDIR"
			;;
	esac

	cd "$DIRECTORY"
	if [ ! "$(ls)" = "" ] ; then
		K=1
		for I in $(ls -tr) ; do
			show_local_item "$K" "$I"
			K=$(( $K+1 ))
		done

		echo Enter the number of the item you want to open:
		read NUMBER

		K=1
		for I in $(ls -tr) ; do
			open_if "$K" "$NUMBER" "$I" "$1"
			K=$(( $K+1 ))
		done
	else
		echo No saved item
	fi
}

open_article_video () {
	if [ ! "$(ls "$LOCALARTICLESDIR" && ls "$LOCALVIDEOSDIR")" = "" ] ; then
		K=1
		cd "$LOCALARTICLESDIR"
		for I in $(ls -tr) ; do
			show_local_item "$K" "$I"
			K=$(( $K+1 ))
		done
		cd "$LOCALVIDEOSDIR"
		for I in $(ls -tr) ; do
			show_local_item "$K" "$I"
			K=$(( $K+1 ))
		done

		echo Enter the number of the item you want to open:
		read NUMBER

		K=1
		cd "$LOCALARTICLESDIR"
		for I in $(ls -tr) ; do
			open_if "$K" "$NUMBER" "$I" --article
			K=$(( $K+1 ))
		done
		cd "$LOCALVIDEOSDIR"
		for I in $(ls -tr) ; do
			open_if "$K" "$NUMBER" "$I" --video
			K=$(( $K+1 ))
		done
	else
		echo No saved item
	fi
}

remove () {
	case "$1" in
		"--article")
			SYNCDIRECTORY="$SYNCARTICLESDIR"
			LOCALDIRECTORY="$LOCALARTICLESDIR"
			;;
		"--video")
			SYNCDIRECTORY="$SYNCVIDEOSDIR"
			LOCALDIRECTORY="$LOCALVIDEOSDIR"
			;;
	esac
	cd "$SYNCDIRECTORY"
	if [ ! "$(ls)" = "" ] ; then
		K=1
		for ARTICLE in $(ls -tr) ; do
			TITLEFILE="${LOCALDIRECTORY}/${ARTICLE}/title.txt"
			if [ -f "$TITLEFILE" ] ; then
				echo "$K" \| "$(cat "$TITLEFILE")"
				echo \> "$(cat "$ARTICLE")"
			else
				echo "$K" \| $(cat "$ARTICLE")
			fi
			echo ========================================
			K=$(( $K+1 ))
		done
		case "$2" in
			"--syncdir")
				echo "Enter the number(s) of the item(s) you want to remove (ex: 1 2 4):"
				;;
			"--localdir")
				echo "Enter the number(s) of the item(s) you want to re-download (ex: 1 2 4):"
				;;
		esac

		read NUMBER

		K=1
		for ARTICLE in $(ls -tr) ; do
			if [ "$(grep " $K " <<< " $NUMBER " )" ] ; then
				case "$2" in
					"--syncdir")
						rm "$ARTICLE"
						;;
					"--localdir")
						rm -r "$LOCALDIRECTORY"/"$ARTICLE"
						;;
				esac
			fi
			K=$(( $K+1 ))
		done
	else
		echo No saved item
	fi
}

remove_article_video () {
	if [ ! "$(ls "$SYNCARTICLESDIR" && ls "$SYNCVIDEOSDIR")" = "" ] ; then
		K=1
		cd "$SYNCARTICLESDIR"
		for ITEM in $(ls -tr) ; do
			TITLEFILE="${LOCALARTICLESDIR}/${ITEM}/title.txt"
			if [ -f "$TITLEFILE" ] ; then
				echo "$K" \| "$(cat "$TITLEFILE")"
				echo \> "$(cat "$ITEM")"
			else
				echo "$K" \| $(cat "$ITEM")
			fi
			echo ========================================
			K=$(( $K+1 ))
		done
		cd "$SYNCVIDEOSDIR"
		for ITEM in $(ls -tr) ; do
			TITLEFILE="${LOCALVIDEOSDIR}/${ITEM}/title.txt"
			if [ -f "$TITLEFILE" ] ; then
				echo "$K" \| "$(cat "$TITLEFILE")"
				echo \> "$(cat "$ITEM")"
			else
				echo "$K" \| $(cat "$ITEM")
			fi
			echo ========================================
			K=$(( $K+1 ))
		done
		case "$1" in
			"--syncdir")
				echo "Enter the number(s) of the item(s) you want to remove (ex: 1 2 4):"
				;;
			"--localdir")
				echo "Enter the number(s) of the item(s) you want to re-download (ex: 1 2 4):"
				;;
		esac

		read NUMBER

		K=1
		cd "$SYNCARTICLESDIR"
		for ITEM in $(ls -tr) ; do
			if [ "$(grep " $K " <<< " $NUMBER " )" ] ; then
				case "$2" in
					"--syncdir")
						rm "$ITEM"
						;;
					"--localdir")
						rm -r "$LOCALARTICLESDIR"/"$ITEM"
						;;
				esac
			fi
			K=$(( $K+1 ))
		done
		cd "$SYNCVIDEOSDIR"
		for ITEM in $(ls -tr) ; do
			if [ "$(grep " $K " <<< " $NUMBER " )" ] ; then
				case "$2" in
					"--syncdir")
						rm "$ITEM"
						;;
					"--localdir")
						rm -r "$LOCALVIDEOSDIR"/"$ITEM"
						;;
				esac
			fi
			K=$(( $K+1 ))
		done
	else
		echo No saved item
	fi
}

remove_dir () {
	cd "$1"
	if [ ! "$(ls)" = "" ] ; then
		rm -r *
	fi
}

list () {
	cd "$SYNCARTICLESDIR"
	if [ ! "$(ls)" = "" ] ; then
		for ARTICLE in $(ls -tr) ; do
			cat "$ARTICLE"
		done
	else
		echo No saved item
	fi
}

download () {
	case "$1" in
		"--articles")
			SYNCDIRECTORY="$SYNCARTICLESDIR"
			LOCALDIRECTORY="$LOCALARTICLESDIR"
			DOWNLOADCOMMAND='wget -nd -E -H -K -k -p -q '
			;;
		"--videos")
			SYNCDIRECTORY="$SYNCVIDEOSDIR"
			LOCALDIRECTORY="$LOCALVIDEOSDIR"
			DOWNLOADCOMMAND='youtube-dl --no-playlist'
			;;
	esac
	cd "$SYNCDIRECTORY"
	if [ ! "$(ls)" = "" ] ; then
		for FILE in * ; do
			cd "$LOCALDIRECTORY"
			if [ ! -d "$FILE" ] ; then
				mkdir "$FILE"
				cd "$FILE"
				LINK="$(cat "$SYNCDIRECTORY"/"$FILE")"
				echo Download "$LINK"
				$DOWNLOADCOMMAND "$LINK"
				echo "$(get_title "$LINK")" > title.txt
			fi
		done
	fi
}

clean () {
	case "$1" in
		"--articles")
			SYNCDIRECTORY="$SYNCARTICLESDIR"
			LOCALDIRECTORY="$LOCALARTICLESDIR"
			;;
		"--videos")
			SYNCDIRECTORY="$SYNCVIDEOSDIR"
			LOCALDIRECTORY="$LOCALVIDEOSDIR"
			;;
	esac
	cd "$LOCALDIRECTORY"
	if [ ! "$(ls)" = "" ] ; then
		for DIR in * ; do
			J=0
			cd "$SYNCDIRECTORY"
			if [ ! "$(ls)" = "" ] ; then
				for FILE in * ; do
					if [ "$DIR" = "$FILE" ] ; then
						J=1
					fi
				done
			fi
			if [ $J -eq 0 ] ; then
			echo Remove "$DIR"
			rm -r "$LOCALDIRECTORY"/"$DIR"
		fi
	done
	fi
}

download_all () {
	download --articles
	download --videos
}

clean_all () {
	clean --articles
	clean --videos
}

update () {
	clean_all
	download_all
}

usage () {
	cat << EOF
Use: $(basename $0) [option]
Options:   -h, --help                    Display help
           -a, --add url [url2…]         Add url(s)
           -av, --add-video url [url2…]  Add video(s)
           -l, --list                    List saved articles
           -u, --update                  Update local copy
           -f, --force                   Force re-download of an item
           -fa, --force-article          Force re-download of an article
           -fv, --force-video            Force re-download of a video
           -F, --force-all               Force re-download of all items
           -Fa, --force-all-articles     Force re-download of all articles
           -Fv, --force-all-videos       Force re-download of all videos
           -o, --open                    Open an item
           -oa, --open-article           Open an article
           -ov, --open-video             Open an video
           -r, --remove                  Remove an item
           -ra, --remove-article         Remove an article
           -rv, --remove-video           Remove an video
           -R, --remove-all              Remove all item
           -Ra, --remove-all-articles    Remove all articles
           -Rv, --remove-all-videos      Remove all video
EOF
}

if [ $# -eq 0 ] ; then
	echo Error: missing argument
	usage
	exit 0
fi

if [ ! "$1" = "-a" ] && [ ! "$1" = "--add" ] && [ $# -ge 2 ] && \
   [ ! "$1" = "-av" ] && [ ! "$1" = "--add-video" ] && [ $# -ge 2 ] ; then
	echo Error: to many arguments
	usage
	exit 0
fi

case "$1" in
	"--help"|"-h")
		usage
		exit 0
		;;
	"--list"|"-l")
		list
		;;
	"--add"|"-a")
		if [ $# -eq 1 ] ; then
			echo Error: missing argument
			usage
			exit 0
		fi
		while test $# -ne 1 ; do
			shift
			add --article "$1"
		done
		update
		;;
	"--add-video"|"-av")
		if [ $# -eq 1 ] ; then
			echo Error: missing argument
			usage
			exit 0
		fi
		while test $# -ne 1 ; do
			shift
			add --video "$1"
		done
		update
		;;
	"--remove"|"-r")
		remove_article_video --syncdir
		clean_all
		;;
	"--remove-article"|"-ra")
		remove --article --syncdir
		clean_all
		;;
	"--remove-video"|"-rv")
		remove --video --syncdir
		clean_all
		;;
	"--remove-all"|"-R")
		remove_dir "$SYNCARTICLESDIR"
		remove_dir "$SYNCVIDEOSDIR"
		clean_all
		;;
	"--remove-all-articles"|"-Ra")
		remove_dir "$SYNCARTICLESDIR"
		clean_all
		;;
	"--remove-all-videos"|"-Rv")
		remove_dir "$SYNCVIDEOSDIR"
		clean_all
		;;
	"--force"|"-f")
		remove_article_video --localdir
		download_all
		;;
	"--force-article"|"-fa")
		remove --article --localdir
		download --articles
		;;
	"--force-video"|"-fv")
		remove --video --localdir
		download --videos
		;;
	"--force-all"|"-F")
		remove_dir "$LOCALARTICLESDIR"
		remove_dir "$LOCALVIDEOSDIR"
		download_all
		;;
	"--force-all-articles"|"-Fa")
		remove_dir "$LOCALARTICLESDIR"
		download --articles
		;;
	"--force-all-videos"|"-Fv")
		remove_dir "$LOCALVIDEOSDIR"
		download --articles
		;;
	"--open"|"-o")
		open_article_video
		;;
	"--open-article"|"-oa")
		open --article
		;;
	"--open-video"|"-ov")
		open --video
		;;
	"--update"|"-u")
		update
		;;
	*)
		echo Error: $1 invalid argument
		usage
		exit 0
		;;
esac

