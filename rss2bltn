#!/bin/bash

CONFIGFILE="${HOME}/.config/bltn/bltn.conf"
. "$CONFIGFILE"

ARTICLESRSSDIR="${SYNCDIR}/rss2bltn/articles_rss/"
VIDEOSRSSDIR="${SYNCDIR}/rss2bltn/videos_rss/"
ARTICLESDIR="${SYNCDIR}/articles/"
ALLARTICLESDIR="${SYNCDIR}/rss2bltn/articles"
VIDEOSDIR="${SYNCDIR}/videos/"
ALLVIDEOSDIR="${SYNCDIR}/rss2bltn/videos"

create_dir () {
	if [ ! -d "$1" ] ; then
		mkdir -p "$1"
	fi
}

create_dir "$ARTICLESRSSDIR"
create_dir "$VIDEOSRSSDIR"
create_dir "$ALLARTICLESDIR"
create_dir "$ALLVIDEOSDIR"

add () {
	case "$1" in
		"--article")
			DIRECTORY="$ARTICLESRSSDIR"
			;;
		"--video")
			DIRECTORY="$VIDEOSRSSDIR"
			;;
	esac
	cd "$DIRECTORY"
	FILENAME=$(echo "$2" | sed "s/\/\//%/g" | cut -d% -f2 \
	                     | sed "s/\//__/g" \
	                     | sed "s/\?/QM/g" )
	echo "$2" > "$FILENAME"
}

update () {
	case "$1" in
		"--articles")
			ALLDIR="$ALLARTICLESDIR"
			RSSDIR="$ARTICLESRSSDIR"
			ARG="-a"
			;;
		"--videos")
			ALLDIR="$ALLVIDEOSDIR"
			RSSDIR="$VIDEOSRSSDIR"
			ARG="-av"
			;;
	esac
	for FILE in $(ls "$RSSDIR") ; do
		create_dir "${ALLDIR}/${FILE}"
		RSSURL="$(cat "${RSSDIR}/${FILE}")"
		echo Checking $RSSURL
		URLLIST="$(rsstail --url --no-heading -e 1 "$RSSURL" 2>/dev/null)"
		for URL in $URLLIST ; do
			cd "${ALLDIR}/${FILE}"
			COMPTEUR=0
			for I in $(ls) ; do
				URL2="$(cat "$I")"
				if [ "$URL" = "$URL2" ] ; then
					COMPTEUR=1
				fi
			done
			if [ "$COMPTEUR" = 0 ] ; then
				FILENAME=$(echo "$URL" | sed "s/\/\//%/g" | cut -d% -f2 \
				                       | sed "s/\//__/g" \
				                       | sed "s/\?/QM/g" )
				echo "$URL" > "${ALLDIR}/${FILE}/${FILENAME}"
				if [ "$2" != "--no-add" ] ; then
					notify-send -t 5000 "$URL added."
					bltn "$ARG" "$URL" && notify-send -t 5000 "$URL downloaded." &
				fi
			fi
		done
	done
}

clean () {
	case "$1" in
		"--articles")
			ALLDIR="$ALLARTICLESDIR"
			RSSDIR="$ARTICLESRSSDIR"
			ARG="-a"
			;;
		"--videos")
			ALLDIR="$ALLVIDEOSDIR"
			RSSDIR="$VIDEOSRSSDIR"
			ARG="-av"
			;;
	esac
	cd "$ALLDIR"
	for DIR in $(ls) ; do
		if [ -f "${RSSDIR}/${DIR}" ] ; then
			cd "${ALLDIR}/${DIR}"
			for FILE in $(ls) ; do
				URL="$(cat "${ALLDIR}/${DIR}/${FILE}")"
				RSSURL="$(cat "${RSSDIR}/${DIR}")"
				URLLIST="$(rsstail --url --no-heading -e 1 "$RSSURL" 2>/dev/null)"
				COMPTEUR=0
				for URL2 in $URLLIST ; do
					if [ "$URL" = "$URL2" ] ; then
						COMPTEUR=1
					fi
				done
				if [ "$COMPTEUR" -eq 0 ] ; then
					rm "${ALLDIR}/${DIR}/${FILE}"
				fi
			done
		else
			rm -r "${ALLDIR}/${DIR}"
		fi
	done
}

list () {
	case "$1" in
		"--articles")
			RSSDIR="$ARTICLESRSSDIR"
			;;
		"--videos")
			RSSDIR="$VIDEOSRSSDIR"
			;;
	esac
	cd "$RSSDIR"
	for FILE in $(ls) ; do
		cat "$FILE"
	done
}

remove () {
	case "$1" in
		"--articles")
			RSSDIR="$ARTICLESRSSDIR"
			;;
		"--videos")
			RSSDIR="$VIDEOSRSSDIR"
			;;
	esac
	cd "$RSSDIR"
	K=1
	for FILE in $(ls) ; do
		echo "$K" \| "$(cat "$FILE")"
		K=$(( $K + 1 ))
	done
	
	echo "Enter the number of the feed you want to remove :"
	read NUMBER

	K=1
	for FILE in $(ls) ; do
		if [ "$(grep " $K " <<< " $NUMBER " )" ] ; then
			echo Remove "$FILE"
			rm "$FILE"
		fi
		K=$(( $K + 1 ))
	done
}

remove_articles_videos () {
	K=1
	cd "$ARTICLESRSSDIR"
	for FILE in $(ls) ; do
		echo "$K" | "$(cat "$FILE")"
		K=$(( $K + 1 ))
	done
	cd "$VIDEOSRSSDIR"
	for FILE in $(ls) ; do
		echo "$K" \| "$(cat "$FILE")"
		K=$(( $K + 1 ))
	done
	
	echo "Enter the number of the feed you want to remove :"
	read NUMBER

	K=1
	cd "$ARTICLESRSSDIR"
	for FILE in $(ls) ; do
		if [ "$(grep " $K " <<< " $NUMBER " )" ] ; then
			echo Remove "$FILE"
			rm "$FILE"
		fi
		K=$(( $K + 1 ))
	done
	cd "$VIDEOSRSSDIR"
	for FILE in $(ls) ; do
		if [ "$(grep " $K " <<< " $NUMBER " )" ] ; then
			echo Remove "$FILE"
			rm "$FILE"
		fi
		K=$(( $K + 1 ))
	done
}

usage () {
	cat << EOF
Use: $(basename $0) [option]
Options:   -h, --help                    Display help
           -a, --add-feed url [url2â€¦]    Add RSS feed(s)
           -av, --add-video-feed url[s]  Add videos RSS feed(s)
           -r                            Remove a feed
           -ra                           Remove articles feeds
           -rv                           Remove videos feeds
           -l                            Remove feeds
           -la                           List articles feed
           -lv                           List videos feed
           -u, --update                  Update articles and videos
           -c, --clean                   Clean
EOF
}

case "$1" in
	"--help"|"-h")
		usage
		exit 0
		;;
	"--add-feed"|"-a")
		if [ $# -eq 1 ] ; then
			echo Error: missing argument
			usage
			exit 0
		fi
		while test $# -ne 1 ; do
			shift
			add --article "$1"
		done
		update --articles --no-add
		;;
	"--add-video-feed"|"-av")
		if [ $# -eq 1 ] ; then
			echo Error: missing argument
			usage
			exit 0
		fi
		while test $# -ne 1 ; do
			shift
			add --video "$1"
		done
		update --videos --no-add
		;;
	"--remove-feed"|"-r")
		remove_articles_videos
		;;
	"--remove-article-feed"|"-ra")
		remove --articles
		;;
	"--remove-video-feed"|"-rv")
		remove --videos
		;;
	"--remove-all-feed"|"-R")
		;;
	"--remove-all-articles-feed"|"-Ra")
		;;
	"--remove-all-videos-feed"|"-Rv")
		;;
	"--list"|"-l")
		list --articles
		list --videos
		;;
	"--list-articles"|"-la")
		list --articles
		;;
	"--list-videos"|"-lv")
		list --videos
		;;
	"--update"|"-u")
		update --articles
		update --videos
		;;
	"--clean"|"-c")
		clean --articles
		clean --videos
		;;
	*)
		echo Error: $1 invalid argument
		usage
		exit 0
		;;
esac
